* {
	text-rendering: auto;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;

	font-variant-ligatures: none;


	box-sizing: border-box;

	-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

a:link {
	cursor: pointer;
}

li {
	list-style-type: none;
}

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font: inherit;
	vertical-align: baseline;
}

html, body {
	//width: 100%;
	//height: 100%;
}

html.ios-overflow-hidden, body.ios-overflow-hidden {
	position: relative !important;
	height: 100% !important;
	overflow: hidden !important;
}

body {
	font-family: $FONT_REGULAR;
	color: $COLOR_BG;
	&.page-light {
		background: #FFFFFF;
		color: $COLOR_BG;
	}
	&.page-dark {
		background: $COLOR_BG;
		color: #FFFFFF;
	}
	&.page-grey {
		background: $COLOR_GREY-2;
		color: $COLOR_BG;
	}
}

.template {
	width: 100%;
	.section.dummy {
		position: absolute;
		top: 0;
		height: 10px;
		opacity: 0
	}
}

.templateContainer {
	width: 100%;
}

.full-page-width {
	@media screen and (min-width: 1880px) {
		width: 100%;
		margin-left: 0;
		margin-right: 0;
	}
}

.black-background {
	position: relative;
	z-index: 7;
	//background: $COLOR_BG;
}

.page-container {
	width: 100%;
	//width: $MAX_GRID_WIDTH;
	.page-container-centered {
		margin: 0 auto;
		width: calc(100% - #{$MOBILE_PADDING * 2});

		@media screen and (min-width: $BREAKPOINT_TABLET_PORTRAIT) {
			width: calc(100% - #{$TABLET_PADDING * 2});
		}
		@media screen and (min-width: $BREAKPOINT_DESKTOP_MENU + 1px) {
			width: calc(100% - #{$DESKTOP_PADDING * 2});
		}
		@media screen and (min-width: $BREAKPOINT_MAX_WIDTH) {
			width: calc(#{$BREAKPOINT_MAX_WIDTH} - #{$DESKTOP_PADDING * 2});
		}
		@media screen and (max-width: 2330px) {
			position: relative;
		}
	}
}
